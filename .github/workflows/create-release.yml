name: Create Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build-binary

      - name: Get version from package.json
        id: version
        run: echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: Get the PR that was merged into main
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              base: 'main',
              sort: 'updated',
              direction: 'desc',
              per_page: 1
            });
            const pr = pulls[0];
            // Set the title and body as outputs
            return {
              title: pr.title,
              body: pr.body
            };

      - name: Make outputs of previous step available
        id: pr-output
        run: |
          echo "::set-output name=title:$(echo ${{ steps.pr.outputs.result }} | jq -r '.title')"
          echo "::set-output name=body::$(echo ${{ steps.pr.outputs.result }} | jq -r '.body')"

      - name: Create a release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.pr-output.outputs.title }}
          body: ${{ steps.pr-output.outputs.body }}
          draft: false
          prerelease: false

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.version.outputs.version }} ./bin/comfyui#Linux_x64 --clobber


